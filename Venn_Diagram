library("limma")
library("qvalue")
library("OrgMassSpecR")
library("biomaRt")
library("Hmisc")
library("gplots")
library("rpx")
library("mzR")
library("OrgMassSpecR")
library("biomaRt")
library("Hmisc")
library("gplots")
library("isobar")
library("devtools")
library("MSnbase")
library("Biobase")
library("dplyr")
library("tidyverse")
library("fs")
library("proxyC")
library("sjlabelled")
library("expss")
library("labelled")
library("patchwork")
library("msdata")
library("remotes")
library("janitor")
library("stringr")
library("ggvenn")
library("ggVennDiagram")
library("VennDiagram")
library("venn")


install.packages("venn", repos="https://www.freestatistics.org/cran/")

wd <- setwd("/Users/jensvandeperre/Desktop/Inputs/ALL_mzTab")
getwd() 
list.files(wd)
    #Automate filename extraction
(file_name_long <- list.files(wd))
(file_paths <- fs::dir_ls("/Users/jensvandeperre/Desktop/Inputs/ALL_mzTab"))
(file_names_short <- substring(file_name_long, 39, 46)) 
length(file_names_short)

#Original study psms
    #Load in original studies
(file_paths_ori_study <- fs::dir_ls("/Users/jensvandeperre/Desktop/Inputs/Orig_study_PSMs"))
ori_study <- list()
for (i in seq_along(file_paths_ori_study)) {
    ori_study[[i]] <- fread(file_paths_ori_study[[i]])
}
str(ori_study[[1]])
length(ori_study)
    #Select sequences
orig <- list()
for (i in 1:264) {
orig[[i]] <- ori_study[[i]] %>%
        as_tibble() %>%
        mutate(sequence = trimws(str_remove_all(RTAtPrecursorHalfElution, "[[:digit:]]+"))) %>%
        mutate(sequence = trimws(str_remove_all(sequence, "[+.]"))) %>%
        mutate(PSM = paste(sequence, FileName, sep="_")) %>%
        select(PSM)
}
view(orig[[1]])
    #Turn into 1 dataframe
OS_PSM <- bind_rows(orig)
OS_PSM_unique <- OS_PSM %>% distinct()
nrow(OS_PSM) #over 3 million peptides identified
nrow(OS_PSM_unique) #Over 20000 unique peptides identified
        #Save as input for online Venny tool
write.table(OS_PSM, file="/Users/jensvandeperre/Desktop/Inputs/Venn_diagram/Original_study/Original_study.txt", sep="\t", row.names=FALSE, quote=FALSE, col.names = FALSE)
write.table(OS_PSM_unique, file="/Users/jensvandeperre/Desktop/Inputs/Venn_diagram/Original_study/Original_study_unique.txt", sep="\t", row.names=FALSE, quote=FALSE, col.names = FALSE)


#Load PSMs 
PSM_all <- readRDS(file = "~/Desktop/Outputs/PSMs/ALL_PSMs_4.5.22") 
view(PSM_all[[1]]) 
length(PSM_all)
  #Create column no_mod
psm <- list() #empty list
for (i in seq_along(PSM_all)) {
  psm[[i]] <- PSM_all[[i]] %>%
  as_tibble() %>% 
  mutate(index = trimws(str_remove_all(PSM_ID, "controllerType=0 controllerNumber=1 scan="))) %>% 
    mutate(PSM = paste(sequence_no_mod, index, sep="_")) %>%
    select(PSM)
}
view(psm[[1]])

AS_PSM <- bind_rows(psm)
AS_PSM_unique <- AS_PSM %>% distinct()
nrow(AS_PSM) #Over 4.5 million peptides identified
nrow(AS_PSM_unique) #Over 20000 unique peptides identified
        #Save as input for online Venny tool
write.table(AS_PSM, file="/Users/jensvandeperre/Desktop/Inputs/Venn_diagram/ANN_SoLo/ANN_SoLo_no_mod.txt", sep="\t", row.names=FALSE, quote=FALSE, col.names = FALSE)
write.table(AS_PSM_unique, file="/Users/jensvandeperre/Desktop/Inputs/Venn_diagram/ANN_SoLo/ANN_SoLo_no_mod_unique.txt", sep="\t", row.names=FALSE, quote=FALSE, col.names = FALSE)



AS <- fread("/Users/jensvandeperre/Desktop/Inputs/Venn_diagram/ANN_SoLo/ANN_SoLo_no_mod.txt", header=FALSE) %>%
    as_tibble 
view(head(AS))


OS <- fread("/Users/jensvandeperre/Desktop/Inputs/Venn_diagram/Original_study/Original_study.txt", header=FALSE) %>%
    as_tibble 
view(head(AS))


AS <- list(AS)
OS <- list(OS)
view(AS)


venn(3)

venn.diagram(
  x = list(AS_PSM, OS_PSM),
  category.names = c("ANN-SoLo", "Original Study"),
  filename = '/Users/jensvandeperre/Desktop/Outputs/Plots/venn_diagramm.png',
  output=TRUE
)

ANN_vs_ORG_unique <- list(
    `Reanalysis` = AS_prot_distinct$Protein.Descriptions,
    `Original Study` = OS_prot_distinct$attrib_name
)
Pro_Venn <- ggvenn(ANN_vs_ORG_unique, c("Reanalysis", "Original Study"),
        fill_color = c("blue", "yellow"),
        stroke_color = FALSE) +
    labs(title="Comparison Unique Identified Protein Genes") +
  theme_void() +
  theme(plot.title = element_text(size = 20, face = "bold"))
Pro_Venn
png(file = "/Users/jensvandeperre/Desktop/Outputs/Plots/Protein_Gene_Venn.png")
   Pro_Venn
dev.off()













#Creating Venn Diagram 
    #Coparing all ANN-SoLo peptides to original study
        #1 file
ANN_vs_ORG <- list(
    "ANN-SoLo" = AS, 
    "Original Study" = OS
)
ggvenn(ANN_vs_ORG, c("ANN-SoLo", "Original Study"))

venn1 <- ggvenn(ANN_vs_ORG,
    c("ANN-SoLo", "Original Study")) +
    geom_venn(
    text_size = 3,
    fill_color = c("#E69F00", "#56B4E9"),
    stroke_size = 0.5,
    set_name_size = 6)


venn2 <- venn.diagram(ANN_vs_ORG)
venn2 %>%
venn.diagram(
    category.names = c("ANN-SoLo", "Original Study"),

)

###ggVennDiagram(ANN_vs_ORG_1_file)

        #ALL files
ANN_vs_ORG <- list(
    ANN_SoLo = as.vector(unlist(ANN_SoLo_no_mod)),
    Original_study = as.vector(unlist(Original_study))
)
ggvenn(ANN_vs_ORG)
ggVennDiagram(ANN_vs_ORG)

    #Comparing only the modified peptides to original study
        #1 file
ANNMOD_vs_ORG_1_file <- list (
    ANN_SoLo_modified_peptides = as.vector(unlist(ANN_SoLo_only_mod)),
    Original_study = as.vector(unlist(orig[[1]]))
)
ggvenn(ANNMOD_vs_ORG)
ggVennDiagram(ANNMOD_vs_ORG)
        #ALL files
ANNMOD_vs_ORG <- list (
    ANN_SoLo_modified_peptides = as.vector(unlist(ANN_SoLo_only_mod)),
    Original_study = as.vector(unlist(Original_study))
)
ggvenn(ANNMOD_vs_ORG)
ggVennDiagram(ANNMOD_vs_ORG)



    #Comparing only the unique peptides
        #ALL ANN-SoLo + PIA identifiec proteins
    AS_prot <- fread(file="/Users/jensvandeperre/Desktop/Inputs/Limm_Qvalve/data_input.txt", sep="\t")
    view(head(AS_prot))
    str(AS_prot)
    AS_prot_distinct <- AS_prot %>% 
    select(Protein.Group.Accessions) %>%
        unique() 
dim(AS_prot_distinct)
 view(AS_prot_distinct)   
    
    
    
    
    %>%
    mutate(Protein.Descriptions = trimws(str_remove_all(Protein.Descriptions, "_HUMAN"))) %>% 
    unique() %>%
    remove_rownames()
rownames(AS_prot_distinct) <- NULL

str(OS_prot_distinct)


view(AS_prot_distinct)
nrow(AS_prot_distinct)    
        #All identifiec proteins from original study
    OS_prot_NAT <- fread(file="/Users/jensvandeperre/Desktop/Inputs/Original_Proteins/Human__CPTAC_COAD__PNNL__Proteome__TMT__03_01_2017__BCM__Gene__PNNL_Normal_TMT_UnsharedLogRatio.cct.txt") %>%
            select(attrib_name)
    OS_prot_TUM <- fread(file="/Users/jensvandeperre/Desktop/Inputs/Original_Proteins/Human__CPTAC_COAD__PNNL__Proteome__TMT__03_01_2017__BCM__Gene__PNNL_Tumor_TMT_UnsharedLogRatio.cct.txt") %>%
            select(attrib_name)
view(head(OS_prot_NAT))
OS_prot_distinct <- rbind(OS_prot_NAT, OS_prot_TUM) %>%
    unique() 
view(OS_prot_distinct)



write.table(AS_prot_distinct$Protein.Descriptions, file="/Users/jensvandeperre/Desktop/Inputs/Venn_diagram/Reanalysis_proteins.txt", sep="\t", row.names=FALSE, quote=FALSE, col.names = FALSE)
write.table(OS_prot_distinct$attrib_name, file="/Users/jensvandeperre/Desktop/Inputs/Venn_diagram/Original_Study_proteins.txt", sep="\t", row.names=FALSE, quote=FALSE, col.names = FALSE)

install.packages("mygene", repos="https://cran.rstudio.com")
library(mygene)
Genes <- c("AACS", "ACAA2", "ACADM", "ACLY", "ACOT8")
Protein_IDs <- queryMany(Genes, scopes = "symbol", 
                              fields = c("name", "uniprot",  "ensemblgene"), 
                              species = "human", as_dataframe = "True")

BiocManager::install("biomaRt")
library(biomaRt)





#	Create a binary matrix -----------------------------------------------------------------------------------------------------------
list_ppi <- list(
	"Original analysis" = OS,
	"Reanalysis" = AS
)
matrix_ppi <- list_to_matrix(list_ppi)

#	Create a combinarion matrix ------------------------------------------------------------------------------------------------------
matrix_ppi_combination <- make_comb_mat(matrix_ppi, top_n_sets = 3) # mode = "intersect")
set_size(matrix_ppi_combination)
set_name(matrix_ppi_combination)
matrix_ppi_combination <- matrix_ppi_combination[comb_degree(matrix_ppi_combination) > 0]

pdf(file = "/Users/jensvandeperre/Desktop/Outputs/Plots/upset_plot.pdf", height = 3.4, width = 10)
ss = set_size(matrix_ppi_combination)
cs = comb_size(matrix_ppi_combination)
ht = UpSet(matrix_ppi_combination, 
	set_order = order(ss),
	comb_order = order(comb_degree(matrix_ppi_combination), -cs),
	top_annotation = HeatmapAnnotation(
		"PPI intersection size" = anno_barplot(cs, 
			ylim = c(0, max(cs)*1.1),
			border = FALSE, 
			gp = gpar(fill = "black"), 
			height = unit(4, "cm")
		), 
		annotation_name_gp= gpar(fontsize = 9),
		annotation_name_side = "left", 
		annotation_name_rot = 90),
	left_annotation = rowAnnotation(
		"Set size" = anno_barplot(-ss, 
			baseline = 0,
			axis_param = list(
				at = c(0, -100, -200, -300),
				labels = c(0, 100, 200, 300, 400, 500, 600, 700),
				labels_rot = 0),
			border = FALSE, 
			gp = gpar(fill = "black"), 
			width = unit(3, "cm")),
		set_name = anno_text(set_name(matrix_ppi_combination), 
			location = 0.5, 
			just = "center",
			width = max_text_width(set_name(matrix_ppi_combination)) + unit(-11, "mm"),
			gp= gpar(fontsize = 8)
			),
			annotation_name_gp= gpar(fontsize = 9)
			),
	right_annotation = NULL,
	show_row_names = FALSE)

ht = draw(ht)
od = column_order(ht)
decorate_annotation("PPI intersection size", {
	grid.text(cs[od], x = seq_along(cs), y = unit(cs[od], "native") + unit(2, "pt"), 
		default.units = "native", just = c("center", "bottom"), 
		gp = gpar(fontsize = 6, col = "#404040"))
})
dev.off()
